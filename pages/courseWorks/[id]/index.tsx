import {
  GetServerSideProps,
  InferGetServerSidePropsType,
  NextPage,
} from "next";
import Image from "next/image";
import MobileLayout from "../../../components/MobileLayout";
import { MainText, MainTexts, Title1 } from "../../../components/utils";
import styles from "../../../styles/works.module.scss";
import ReactMarkdown from "react-markdown";
import MobileContent from "../../../components/MobileContent";
import Head from "next/head";
import moment from 'moment';
import "moment/locale/zh-cn"
moment.locale('zh-cn')
// import * as matter from "gray-matter";
const WorkDetail: NextPage = ({
  id,
  title,
  published_at,
  course_category,
  discribe,
  content,
  videourl,
  author,
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const pubilshedTime = moment(published_at);
 
  return (
    <div>
      <Head>
        <title>{title}｜浙江理工大学工业设计系</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MobileLayout>
        <div className={styles.imgTitle}>
          <Image
            src={require("/public/img/works/workstitle.png")}
            alt={"imageTitle"}
          ></Image>
        </div>
        <div className={styles.mobileContainer}>
          <div className={styles.title}>
            <Title1>{title}</Title1>
          </div>
          <div className={styles.info}>
            <MainTexts>{`${pubilshedTime.calendar()}　${author}`}</MainTexts>
          </div>
          <article className={styles.content}>
            <MobileContent content={content} />
          </article>
        </div>
      </MobileLayout>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async context => {
  // Fetch data from external API
  const matter = require("gray-matter");
  const pageid = context.params?.id;
  const res = await fetch(`http://localhost:1337/course-works/${pageid}`);
  const data = await res.json();
  const id = data.id;
  const title = data.title;
  const published_at = data.published_at;
  const course_category = data.course_category;
  const discribe = data.discribe;
  const content = data.content;
  const videourl = data.videourl;
  const author = data.author;
  return {
    props: {
      id: id,
      title: title,
      published_at: published_at,
      course_category: course_category,
      discribe: discribe,
      content: matter(content).content,
      videourl: videourl,
      author: author,
    },
  };
};

export default WorkDetail;
