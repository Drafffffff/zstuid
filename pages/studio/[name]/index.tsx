import styles from "../../../styles/studios.module.scss";
// import MainLayout from "../../../components/MainLayout";
import MobileLayout from "../../../components/MobileLayout";
import Image from "next/image";
import {
    GetServerSideProps,
    InferGetServerSidePropsType,
    NextPage,
} from "next";
import Head from "next/head";
import {
    StudioDirectionM,
    Titleswe,
    StudioDirectionPersonCardM, tidyUrl, PageNav,
} from "../../../components/utils";
import {useRouter} from "next/router";
import {useEffect, useState} from "react";
import MobileContent from "../../../components/MobileContent";
import MobileCards from "../../../components/MobileCards";

interface categray {
    fwsjyshcx: string;
    kcxsj: string;
    qdyjs: string;
    szwc: string;
    jjsj: string;
}

const courses: categray = {
    fwsjyshcx: "服务设计与社会创新",
    kcxsj: "家具设计",
    qdyjs: "器道研究所",
    szwc: "数字文创",
    jjsj: "家具设计",
};
const coursesId: categray = {
    fwsjyshcx: "1",
    kcxsj: "2",
    qdyjs: "3",
    szwc: "4",
    jjsj: "5",
};
const Pages: NextPage = ({
                             describe,
                             Personnel,
                             ReachDirection,
                             coverUrl,
                             works
                         }: InferGetServerSidePropsType<typeof getServerSideProps>) => {
    const router = useRouter();
    const key = router.query.name as keyof categray;
    const [title, setTitle] = useState(courses[key]);
    useEffect(() => {
        setTitle(courses[key])
    }, [key])
    const [currentPage, SetCurrentPage] = useState(1);
    const ItemPerPage = 12;
    const totalPagesCount = Math.ceil(works.length / ItemPerPage);
    return (
        <div className={styles.container}>
            <Head>
                <title>{title}｜浙江理工大学工业设计系</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/public/favicon.ico"/>
            </Head>
            <MobileLayout>
                <div className={styles.titleImage}>
                    <Image
                        src={(tidyUrl(coverUrl))}
                        alt="imageTitle"
                        height={95}
                        width={391}
                    />
                </div>
                <div className={styles.introTitle}>
                    <Titleswe zh="工作室介绍" en="Studio Introduction"/>
                </div>
                <div className={styles.intro}>
                    <MobileContent content={describe}/>
                </div>
                <div className={styles.directionTitle}>
                    <Titleswe zh="研究方向" en="Research direction"/>
                </div>
                <div className={styles.direction}>
                    {ReachDirection.map((e: any, index: number) => (
                        <div key={index}>
                            <StudioDirectionM zh={e.direction_ZH} en={e.direction_EN}/>
                        </div>
                    ))}
                </div>
                <div className={styles.personnelTitle}>
                    <Titleswe zh="人员架构" en="Personnel"/>
                </div>
                <div className={styles.personnel}>
                    {Personnel.map((e: any, index: number) => (
                        <div key={index}>
                            <StudioDirectionPersonCardM name={e.name} describe={e.describe} photoUrl={e.cover.url}/>
                        </div>
                    ))}
                </div>
                <div style={{display: works.length === 0 ? "none" : "block"}}>
                    <div className={styles.resultTitle}>
                        <Titleswe zh="具体成果" en="Concrete results"/>
                    </div>
                    <div className={styles.result}>
                        <MobileCards
                            works={works.slice(
                                (currentPage - 1) * ItemPerPage,
                                currentPage * ItemPerPage
                            )}
                        />
                        <PageNav
                            totalPages={totalPagesCount}
                            currentPage={currentPage}
                            setPage={SetCurrentPage}
                            pathName={`/studio/$(key)`}
                        />
                    </div>
                </div>

            </MobileLayout>
        </div>
    );
};

export const getServerSideProps: GetServerSideProps = async context => {
        const key = context.params?.name as string;
        const res = await fetch(`http://127.0.0.1:1337/studio`);
        const data = await res.json();
        // console.log(data[key]);
        const describe = data[key].describe;
        const Personnel = data[key].Personnel;
        const ReachDirection = data[key].ReachDirection;
        const coverUrl = data[key].cover.url;

        // @ts-ignore
        const worksres = await fetch(`http://127.0.0.1:1337/studio-works?studio_category=${coursesId[key]}`)
        const worksData = await worksres.json()
        const works = worksData?.map((a: any) => ({
            title: a.title,
            published_at: a.published_at,
            author: a.author,
            cover: a.cover,
            url: `/studio/${key}/${a.id}`,
        }));
        console.log(works)
        return {
            props: {
                describe: describe,
                Personnel: Personnel,
                ReachDirection: ReachDirection,
                coverUrl: coverUrl,
                works: works
            },
        };
    }
export default Pages;
